#source : https://github.com/turbinesFoam/turbinesFoam
sudo: required
python:
  - "3.7"
dist: xenial
language: cpp

env:
  - OF_VERS=6

before_install:
    - sudo python3 -V
    - sudo apt-get -y install python3-pip python-dev
    - sudo pip3 install --upgrade pip
    - sudo pip3 install -U setuptools
    - sudo pip3 install fluidfoam
    - sudo add-apt-repository http://dl.openfoam.org/ubuntu
    - sudo sh -c "wget -O - http://dl.openfoam.org/gpg.key | apt-key add -"
    - sudo apt-get update -qq
    - sudo apt-get install -qq openfoam${OF_VERS}
    - sudo apt-get install -qq vera++
    - sudo apt-get install -qq doxygen
    - sudo apt-get install graphviz
    ## http://conda.pydata.org/docs/travis.html#the-travis-yml-file
    # wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    # bash miniconda.sh -b -p $HOME/miniconda
    # export PATH="$HOME/miniconda/bin:$PATH"
    # hash -r
    # conda config --set always_yes yes --set changeps1 no
    # conda update -q conda
    # conda install -q pandas numpy nose

install:
    - ./foamStyleCheck/checkStyle
    - source /opt/openfoam${OF_VERS}/etc/bashrc
    - ./Allwmake

before_script:
    - source /opt/openfoam${OF_VERS}/etc/bashrc

jobs:
  include:
    - stage: test
      script:
        - cd test-ci/1DSedim && cp -f constant/forceProperties.sedim constant/forceProperties && cp -f system/controlDict.sedim system/controlDict && ./Allrun
        - python3 test_Sedimentation.py
        - cp -f constant/forceProperties.bedload constant/forceProperties && cp -f system/controlDict.bedload system/controlDict && ./Allrun
        - python3 test_Bedload.py
    - script:
      - cd test-ci/1DAvalancheMuI
      - travis_wait 30 ./Allrun
      - python3 test_AvalancheMuI.py
    - script:
      - cd test-ci/1DSimpleShear/ && ./Allrun
      - python3 test_1DSimpleShear.py
      - cd ../1DBoundaryLayer/
      - travis_wait 30 ./Allrun
      - python3 test_1DBoundaryLayer.py
    - stage: build pages
      install: skip
      script:
        - cd doc/
        - doxygen
        - mv html ../public/
        - cp images/twitter.png ../public/
        - cp images/github.png ../public/

deploy:
  # Utiliser le processus de déploiement des pages Github
  provider: pages
  skip_cleanup: true
  # Répertoire où se trouvent les fichiers générés
  local_dir: public
  # Github security/auth token
  github_token: $GITHUB_TOKEN
  # Conserve les anciens fichiers/constructions des déploiements précédents
  keep_history: true
  # La branche Git sur laquelle on souhaite déployer (master, gh-pages, foo...)
  target_branch: gh-pages
  on:
    branch: master

notifications:
  slack:
    rooms:
      sedfoam:gFgw4hb2TY4uMX10tUA0xb4F#dev
    on_success: always
