#source : https://github.com/turbinesFoam/turbinesFoam
sudo: required
language: python
python:
  - "3.8"
dist: 
  - focal
env:
  - OF_VERS=7

before_install:
    - python -V
    - pip install --upgrade pip
    - pip install -U setuptools
    - pip install fluidfoam
#    - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6C0DAC728B29D817 
    - sudo sh -c "wget -O - http://dl.openfoam.org/gpg.key | apt-key add -"
    - sudo add-apt-repository http://dl.openfoam.org/ubuntu
    - sudo apt-get update -qq
    - sudo apt-get install -qq openfoam${OF_VERS}
    - sudo apt-get install -qq vera++
    - sudo apt-get install graphviz tex-gyre
    - sudo apt-get -y install texlive-base texlive-latex-extra
    - sudo apt-get -y install texlive-fonts-extra texlive-fonts-recommended
    ## http://conda.pydata.org/docs/travis.html#the-travis-yml-file
    # wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    # bash miniconda.sh -b -p $HOME/miniconda
    # export PATH="$HOME/miniconda/bin:$PATH"
    # hash -r
    # conda config --set always_yes yes --set changeps1 no
    # conda update -q conda
    # conda install -q pandas numpy nose

install:
    - ./foamStyleCheck/checkStyle
    - source /opt/openfoam${OF_VERS}/etc/bashrc
    - ./Allwmake

before_script:
    - source /opt/openfoam${OF_VERS}/etc/bashrc

jobs:
  include:
    - stage: test
      if: type = cron OR type = pull_request
      script:
      - cd test-ci/1DSedim && cp -f constant/forceProperties.sedim constant/forceProperties && cp -f system/controlDict.sedim system/controlDict && ./Allrun
      - python test_Sedimentation.py
      - cp -f constant/forceProperties.bedload constant/forceProperties && cp -f system/controlDict.bedload system/controlDict && ./Allrun
      - python test_Bedload.py
    - stage: advanced tests
      if: type = cron OR type = pull_request
      script:
      - cd test-ci/1DAvalancheMuI
      - travis_wait 30 ./Allrun
      - python test_AvalancheMuI.py
    - if: type = cron OR type = pull_request
      script:
      - cd test-ci/1DSimpleShear/ && ./Allrun
      - python test_1DSimpleShear.py
      - cd ../1DBoundaryLayer/
      - travis_wait 30 ./Allrun
      - python test_1DBoundaryLayer.py
      - cd ../1DWetAvalanche/
      - travis_wait 30 ./Allrun
      - python test_1DWetAvalanche.py

    - stage: build pages
      if: repo = SedFoam/sedfoam OR repo = CyrilleBonamy/sedfoam
      install: skip
      script:
        - sudo apt-get install dvisvgm libclang-9-dev libclang-cpp9
        - pip install -U jinja2 Pygments
        - wget http://doxygen.nl/files/doxygen-1.8.20.linux.bin.tar.gz
        - tar -xvf doxygen-1.8.20.linux.bin.tar.gz
        - export PATH=$PWD/doxygen-1.8.20/bin:$PATH
        - cd doc/
        - git clone git://github.com/mosra/m.css
        - cd m.css/documentation
        - cp ../../doxygen.py .
        - python doxygen.py ../../conf.py
        - cd ../..
        - mv mcssout/html ../public/
        - cp images/* ../public/
      deploy:
        # Utiliser le processus de déploiement des pages Github
        provider: pages
        skip_cleanup: true
        # Répertoire où se trouvent les fichiers générés
        local_dir: public
        # Github security/auth token
        github_token: $GITHUB_TOKEN
        # Conserve les anciens fichiers/constructions des déploiements précédents
        keep_history: true
        # La branche Git sur laquelle on souhaite déployer (master, gh-pages, foo...)
        target_branch: gh-pages
        on:
          branch: master

notifications:
  slack:
    rooms:
      sedfoam:gFgw4hb2TY4uMX10tUA0xb4F#dev
    on_success: always


