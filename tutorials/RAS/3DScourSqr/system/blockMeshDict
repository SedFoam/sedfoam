/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
scale 1.;

Lu   0.4;
Ld   0.8;
H    0.4;
D    0.1;
N0X  12;
N1X  6;
N2X  18;
N0Y  15;
N1Y  9;
N2Y  15;
N0Z  176;
N1Z  52;
grad0x #eval "1/2.75889735683314";
grad1x 1.;
grad2x 4.936196796988305;
grad0y 3.7513348259705044;
grad1y 1.;
grad2y #eval "1/3.7513348259705044";
grad0z 0.583041950907628;
grad1z 41.4329510633051;

invgrad1x #eval "1/$grad1x";
invgrad2x #eval "1/$grad2x";
invgrad0y #eval "1/$grad0y";
invgrad1y #eval "1/$grad1y";
invgrad0z #eval "1/$grad0z";
invgrad1z #eval "1/$grad1z";

minX   #eval "-$Lu";
maxX   #eval "$Ld";
minY   #eval "-$H.";
maxY   #eval "$H.";
minZ   #eval "-$D/2.";
maxZ   #eval "$D*2.";
X0   #eval "-$D/2.";
X1   #eval "$D/2.";
Y0   #eval "-$D/2.";
Y1   #eval "$D/2.";
Z0   #eval "-$D*0.";


vertices
(
($minX $minY $minZ)  // point0
($X0 $minY $minZ)    // point1
($X1 $minY $minZ)    // point2
($maxX $minY $minZ)  // point3
($maxX $Y0 $minZ)    // point4
($maxX $Y1 $minZ)    // point5
($maxX $maxY $minZ)  // point6
($X1 $maxY $minZ)    // point7
($X0 $maxY $minZ)    // point8
($minX $maxY $minZ)  // point9
($minX $Y1 $minZ)    // point10
($minX $Y0 $minZ)    // point11
($X0 $Y0 $minZ)      // point12
($X1 $Y0 $minZ)      // point13
($X1 $Y1 $minZ)      // point14
($X0 $Y1 $minZ)      // point15

($minX $minY $Z0)  // point16
($X0 $minY $Z0)    // point17
($X1 $minY $Z0)    // point18
($maxX $minY $Z0)  // point19
($maxX $Y0 $Z0)    // point20
($maxX $Y1 $Z0)    // point21
($maxX $maxY $Z0)  // point22
($X1 $maxY $Z0)    // point23
($X0 $maxY $Z0)    // point24
($minX $maxY $Z0)  // point25
($minX $Y1 $Z0)    // point26
($minX $Y0 $Z0)    // point27
($X0 $Y0 $Z0)      // point28
($X1 $Y0 $Z0)      // point29
($X1 $Y1 $Z0)      // point30
($X0 $Y1 $Z0)      // point31

($minX $minY $maxZ)  // point32
($X0 $minY $maxZ)    // point33
($X1 $minY $maxZ)    // point34
($maxX $minY $maxZ)  // point35
($maxX $Y0 $maxZ)    // point36
($maxX $Y1 $maxZ)    // point37
($maxX $maxY $maxZ)  // point38
($X1 $maxY $maxZ)    // point39
($X0 $maxY $maxZ)    // point40
($minX $maxY $maxZ)  // point41
($minX $Y1 $maxZ)    // point42
($minX $Y0 $maxZ)    // point43
($X0 $Y0 $maxZ)      // point44
($X1 $Y0 $maxZ)      // point45
($X1 $Y1 $maxZ)      // point46
($X0 $Y1 $maxZ)      // point47
);

blocks
(
hex (0 1 12 11 16 17 28 27) ($N0X $N2Y $N0Z) simpleGrading ($grad0x $grad2y $grad0z)   //block A
hex (11 12 15 10 27 28 31 26) ($N0X $N1Y $N0Z) simpleGrading ($grad0x $grad1y $grad0z) //block B
hex (10 15 8 9 26 31 24 25) ($N0X $N0Y $N0Z) simpleGrading ($grad0x $grad0y $grad0z)   //block C
hex (15 14 7 8 31 30 23 24) ($N1X $N0Y $N0Z) simpleGrading ($grad1x $grad0y $grad0z)   //block D
hex (1 2 13 12 17 18 29 28) ($N1X $N2Y $N0Z) simpleGrading ($grad1x $grad2y $grad0z)   //block E
hex (14 5 6 7 30 21 22 23) ($N2X $N0Y $N0Z) simpleGrading ($grad2x $grad0y $grad0z)    //block F
hex (13 4 5 14 29 20 21 30) ($N2X $N1Y $N0Z) simpleGrading ($grad2x $grad1y $grad0z)   //block G
hex (2 3 4 13 18 19 20 29) ($N2X $N2Y $N0Z) simpleGrading ($grad2x $grad2y $grad0z)    //block H

hex (16 17 28 27 32 33 44 43) ($N0X $N2Y $N1Z) simpleGrading ($grad0x $grad2y $grad1z) //block A'
hex (27 28 31 26 43 44 47 42) ($N0X $N1Y $N1Z) simpleGrading ($grad0x $grad1y $grad1z) //block B'
hex (26 31 24 25 42 47 40 41) ($N0X $N0Y $N1Z) simpleGrading ($grad0x $grad0y $grad1z) //block C'
hex (31 30 23 24 47 46 39 40) ($N1X $N0Y $N1Z) simpleGrading ($grad1x $grad0y $grad1z) //block D'
hex (17 18 29 28 33 34 45 44) ($N1X $N2Y $N1Z) simpleGrading ($grad1x $grad2y $grad1z) //block E'
hex (30 21 22 23 46 37 38 39) ($N2X $N0Y $N1Z) simpleGrading ($grad2x $grad0y $grad1z) //block F'
hex (29 20 21 30 45 36 37 46) ($N2X $N1Y $N1Z) simpleGrading ($grad2x $grad1y $grad1z) //block G'
hex (18 19 20 29 34 35 36 45) ($N2X $N2Y $N1Z) simpleGrading ($grad2x $grad2y $grad1z) //block H'
);

edges
(
);

boundary
(
outlet
{
type patch;
faces
(
(3 4 20 19)
(4 5 21 20)
(5 6 22 21)
(19 20 36 35)
(20 21 37 36)
(21 22 38 37)
);
}

inlet
{
type patch;
faces
(
(11 0 16 27)
(10 11 27 26)
(9 10 26 25)
(27 16 32 43)
(26 27 43 42)
(25 26 42 41)
);
}

lateral
{
type cyclic;
neighbourPatch symplane;
faces
(
(8 9 25 24)
(7 8 24 23)
(6 7 23 22)
(22 23 39 38)
(23 24 40 39)
(24 25 41 40)
);
}

symplane
{
type cyclic;
neighbourPatch lateral;
faces
(
(0 1 17 16)
(1 2 18 17)
(2 3 19 18)
(18 19 35 34)
(17 18 34 33)
(16 17 33 32)

);
}

cylinder
{
type wall;
faces
(
(15 12 28 31)
(14 15 31 30)
(12 13 29 28)
(13 14 30 29)
(31 28 44 47)
(30 31 47 46)
(28 29 45 44)
(29 30 46 45)
);
}

bottom
{
type wall;
faces
(
(0 11 12 1)
(11 10 15 12)
(10 9 8 15)
(1 12 13 2)
(15 8 7 14)
(2 13 4 3)
(13 14 5 4)
(14 7 6 5)
);
}

surface
{
type patch;
faces
(
(32 33 44 43)
(43 44 47 42)
(42 47 40 41)
(33 34 45 44)
(47 46 39 40)
(34 35 36 45)
(45 36 37 46)
(46 37 38 39)
);
}

);

mergePatchPairs
(
); 

// ************************************************************************* //
