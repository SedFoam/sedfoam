FoamFile
{
    version	 2.0;
    format	 ascii;
    class	 dictionary;
    object	 blockMeshDict;
}



scale	 1.0;

vertices
(
    ( -0.4 -0.1  -0.00018 ) //  0
    (  0.4 -0.1  -0.00018 ) //  1
    (  0.4 -0.05 -0.00018 ) //  2
    (  0.4  0.0  -0.00018 ) //  3
    (  0.4  0.13 -0.00018 ) //  4
    (  0.4  0.33 -0.00018 ) //  5
    ( -0.4  0.33 -0.00018 ) //  6
    ( -0.4  0.13 -0.00018 ) //  7
    ( -0.4  0.0  -0.00018 ) //  8
    ( -0.4 -0.05 -0.00018 ) //  9

    ( -0.4 -0.1   0.00018 ) //  10
    (  0.4 -0.1   0.00018 ) //  11
    (  0.4 -0.05  0.00018 ) //  12
    (  0.4  0.0   0.00018 ) //  13
    (  0.4  0.13  0.00018 ) //  14
    (  0.4  0.33  0.00018 ) //  15
    ( -0.4  0.33  0.00018 ) //  16
    ( -0.4  0.13  0.00018 ) //  17
    ( -0.4  0.0   0.00018 ) //  18
    ( -0.4 -0.05  0.00018 ) //  19
);

blocks
(
    hex ( 0 1 2 9 10 11 12 19 ) ( 112 7 1 ) simpleGrading ( 1 1 1 ) // 1
    hex ( 9 2 3 8 19 12 13 18 ) ( 112 7 1 ) simpleGrading ( 1 1 1 ) // 2
    hex ( 8 3 4 7 18 13 14 17 ) ( 112 18 1 ) simpleGrading ( 1 1 1 ) // 3
    hex ( 7 4 5 6 17 14 15 16 ) ( 112 11 1 ) simpleGrading ( 1 5 1 ) // 4 
);
 
edges
(
);

boundary
(
    inlet_0
    {
        type            patch;
//        type            cyclic;
//        neighbourPatch  outlet;
        faces
        (
            ( 0 10 19 9 )
            ( 9 19 18 8 )
            ( 8 18 17 7 )
            ( 7 17 16 6 )
        );
    }

    outlet_0
    {
        type            patch;
//        type            cyclic;
//        neighbourPatch  inlet;
        faces
        (
            ( 1 11 12 2 )
            ( 2 12 13 3 )
            ( 3 13 14 4 )
            ( 4 14 15 5 )
        );
    }

    surface_0
    {
        type            patch;
//        type            symmetryPlane;
        faces
        (
            ( 6 5 15 16 )
        );
    }

    bottom_0
    {
        type            patch;
//        type            wall;
        faces
        (
            ( 0 1 11 10 )
        );
    }

    lateralback_0
    {
        type            patch;
//        type            empty;
        faces
        (
            ( 0 1 2 9 )
            ( 9 2 3 8 )
            ( 8 3 4 7 )
            ( 7 4 5 6 )
        );
    }

    lateralfront_0
    {
        type            patch;
//        type            empty;
        faces
        (
            ( 10 11 12 19 )
            ( 19 12 13 18 )
            ( 18 13 14 17 )
            ( 17 14 15 16 )
        );
    }
);

mergPatchPairs
(
);
